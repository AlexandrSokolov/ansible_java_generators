package {{ group_id }}.commons.cron;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import javax.ejb.ScheduleExpression;

import static {{ group_id }}.commons.cron.Timer.WRONG_FORMAT;

public class TimerTest {

  @Test
  public void testFromCronJobWithoutYear() {
    //10:15 AM every Monday, Tuesday, Wednesday, Thursday and Friday.
    ScheduleExpression scheduleExpression = new Timer().fromCronJob("0 15 10 ? * MON-FRI");
    Assertions.assertEquals("0", scheduleExpression.getSecond());
    Assertions.assertEquals("15", scheduleExpression.getMinute());
    Assertions.assertEquals("10", scheduleExpression.getHour());
    //any day of month
    Assertions.assertEquals("?", scheduleExpression.getDayOfMonth());
    //every month
    Assertions.assertEquals("*", scheduleExpression.getMonth());
    Assertions.assertEquals("MON-FRI", scheduleExpression.getDayOfWeek());
    //also year is not set, automatically it means '*' - every year
    Assertions.assertEquals("*", scheduleExpression.getYear());
  }

  @Test
  public void testFromCronJobWithYear() {
    //10:15 AM every Monday, Tuesday, Wednesday, Thursday and Friday.
    ScheduleExpression scheduleExpression = new Timer().fromCronJob("0 15 10 ? * MON-FRI 2018");
    Assertions.assertEquals("0", scheduleExpression.getSecond());
    Assertions.assertEquals("15", scheduleExpression.getMinute());
    Assertions.assertEquals("10", scheduleExpression.getHour());
    //any day of month
    Assertions.assertEquals("?", scheduleExpression.getDayOfMonth());
    //every month
    Assertions.assertEquals("*", scheduleExpression.getMonth());
    Assertions.assertEquals("MON-FRI", scheduleExpression.getDayOfWeek());
    Assertions.assertEquals("2018", scheduleExpression.getYear());
  }

  @Test
  public void testFromCronJobFewElements() {
    final String expression = "0 15 10";
    IllegalStateException exception = Assertions.assertThrows(
      IllegalStateException.class,
      () -> new Timer().fromCronJob(expression));
    Assertions.assertEquals(
      String.format(WRONG_FORMAT, expression),
      exception.getMessage());
  }

  @Test
  public void testFromScheduleExpressionWithoutYear() {
    String cron = "0 1 * ? * MON";
    ScheduleExpression expression = new Timer().fromCronJob(cron);
    //year will be added to the cron expression:
    Assertions.assertEquals(cron + " *", new Timer().toCronJob(expression));
  }
}
